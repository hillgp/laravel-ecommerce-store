openapi: 3.0.3
info:
  title: Laravel E-commerce Store API
  description: |
    API RESTful completa para o Laravel E-commerce Store.

    Esta API oferece endpoints para:
    - Gestão de produtos, categorias e marcas
    - Carrinho de compras e pedidos
    - Sistema de avaliações e comentários
    - Gestão de clientes e endereços
    - Cupons e promoções
    - Relatórios e analytics
    - Administração completa

    ## Autenticação

    A API utiliza Laravel Sanctum para autenticação. Para acessar endpoints protegidos:

    1. Faça login para obter um token
    2. Inclua o token no header: `Authorization: Bearer {token}`
    3. Para operações administrativas, o usuário deve ter privilégios de admin

    ## Paginação

    Todos os endpoints que retornam listas suportam paginação:

    ```json
    {
      "success": true,
      "data": [...],
      "pagination": {
        "current_page": 1,
        "per_page": 15,
        "total": 100,
        "last_page": 7,
        "from": 1,
        "to": 15
      }
    }
    ```

    ## Filtros e Ordenação

    Use query parameters para filtrar e ordenar:

    - `?sort=name&order=asc` - Ordenar por nome (asc/desc)
    - `?category_id=1` - Filtrar por categoria
    - `?min_price=100&max_price=1000` - Filtrar por preço
    - `?search=smartphone` - Buscar produtos
    - `?in_stock=1` - Apenas produtos em estoque
    - `?featured=1` - Apenas produtos em destaque

    ## Cache

    A API utiliza cache inteligente com headers informativos:

    - `X-Cache-Hit: true/false` - Se a resposta veio do cache
    - `Cache-Control: max-age=300` - Tempo de vida do cache
    - `ETag: "abc123"` - ETag para cache do navegador

    ## Rate Limiting

    Limites de requisições por minuto:
    - Endpoints públicos: 60 req/min
    - Endpoints autenticados: 120 req/min
    - Endpoints admin: 30 req/min

    ## Versionamento

    A API é versionada. Use `/api/v1/` para a versão atual.
  version: 1.0.0
  contact:
    name: Suporte API
    email: api@loja.com
    url: https://docs.loja.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: https://api.loja.com
    description: Servidor de produção
  - url: https://staging-api.loja.com
    description: Servidor de staging
  - url: http://localhost:8000
    description: Servidor local de desenvolvimento
security:
  - bearerAuth: []
  - apiKey: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        Token de autenticação obtido via `/api/v1/auth/login`.

        Inclua no header: `Authorization: Bearer {token}`
    apiKey:
      type: apiKey
      in: header
      name: X-API-Key
      description: |
        Chave de API para acesso administrativo.

        Obtenha em: `/api/v1/admin/api-keys`
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Smartphone Samsung Galaxy"
        slug:
          type: string
          example: "smartphone-samsung-galaxy"
        sku:
          type: string
          example: "SAMSUNG-001"
        description:
          type: string
          example: "Smartphone de última geração com câmera de alta resolução"
        short_description:
          type: string
          example: "Smartphone Samsung Galaxy com 128GB"
        price:
          type: number
          format: float
          example: 1999.90
        compare_price:
          type: number
          format: float
          example: 2299.90
        cost:
          type: number
          format: float
          example: 1500.00
        stock_quantity:
          type: integer
          example: 50
        min_stock:
          type: integer
          example: 10
        max_stock:
          type: integer
          example: 1000
        is_active:
          type: boolean
          example: true
        is_featured:
          type: boolean
          example: true
        is_digital:
          type: boolean
          example: false
        weight:
          type: number
          format: float
          example: 0.5
        length:
          type: number
          format: float
          example: 15.0
        width:
          type: number
          format: float
          example: 7.0
        height:
          type: number
          format: float
          example: 1.0
        meta_title:
          type: string
          example: "Smartphone Samsung Galaxy - Loja Online"
        meta_description:
          type: string
          example: "Compre o Smartphone Samsung Galaxy com 128GB de armazenamento"
        tags:
          type: array
          items:
            type: string
          example: ["smartphone", "samsung", "galaxy"]
        category:
          $ref: '#/components/schemas/Category'
        brand:
          $ref: '#/components/schemas/Brand'
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review'
        average_rating:
          type: number
          format: float
          example: 4.5
        total_reviews:
          type: integer
          example: 25
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Category:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Eletrônicos"
        slug:
          type: string
          example: "eletronicos"
        description:
          type: string
          example: "Produtos eletrônicos e tecnologia"
        image:
          type: string
          example: "categories/eletronicos.jpg"
        is_active:
          type: boolean
          example: true
        parent_id:
          type: integer
          nullable: true
          example: null
        sort_order:
          type: integer
          example: 1
        meta_title:
          type: string
          example: "Eletrônicos - Loja Online"
        meta_description:
          type: string
          example: "Encontre os melhores produtos eletrônicos"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Brand:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Samsung"
        slug:
          type: string
          example: "samsung"
        description:
          type: string
          example: "Tecnologia Samsung"
        logo:
          type: string
          example: "brands/samsung.png"
        website:
          type: string
          example: "https://samsung.com"
        is_active:
          type: boolean
          example: true
        sort_order:
          type: integer
          example: 1
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    ProductImage:
      type: object
      properties:
        id:
          type: integer
          example: 1
        product_id:
          type: integer
          example: 1
        path:
          type: string
          example: "products/smartphone-1.jpg"
        alt:
          type: string
          example: "Smartphone Samsung Galaxy"
        sort_order:
          type: integer
          example: 1
        is_primary:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Review:
      type: object
      properties:
        id:
          type: integer
          example: 1
        product_id:
          type: integer
          example: 1
        customer_id:
          type: integer
          example: 1
        order_id:
          type: integer
          example: 1
        rating:
          type: integer
          minimum: 1
          maximum: 5
          example: 5
        comment:
          type: string
          example: "Excelente produto! Recomendo muito."
        pros:
          type: string
          example: "Câmera excelente, bateria dura o dia todo"
        cons:
          type: string
          example: "Preço um pouco elevado"
        is_verified:
          type: boolean
          example: true
        is_approved:
          type: boolean
          example: true
        helpful_votes:
          type: integer
          example: 15
        total_votes:
          type: integer
          example: 20
        customer_name:
          type: string
          example: "João Silva"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Customer:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "João Silva"
        email:
          type: string
          format: email
          example: "joao@email.com"
        phone:
          type: string
          example: "+55 11 99999-9999"
        cpf:
          type: string
          example: "123.456.789-00"
        date_of_birth:
          type: string
          format: date
          example: "1990-01-01"
        gender:
          type: string
          enum: [M, F, O]
          example: "M"
        is_active:
          type: boolean
          example: true
        email_verified_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Address:
      type: object
      properties:
        id:
          type: integer
          example: 1
        customer_id:
          type: integer
          example: 1
        type:
          type: string
          enum: [billing, shipping]
          example: "billing"
        name:
          type: string
          example: "João Silva"
        company:
          type: string
          nullable: true
          example: "Empresa XYZ"
        address:
          type: string
          example: "Rua das Flores, 123"
        number:
          type: string
          example: "123"
        complement:
          type: string
          nullable: true
          example: "Sala 45"
        district:
          type: string
          example: "Centro"
        city:
          type: string
          example: "São Paulo"
        state:
          type: string
          example: "SP"
        zipcode:
          type: string
          example: "01234-567"
        country:
          type: string
          example: "Brasil"
        is_default:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Order:
      type: object
      properties:
        id:
          type: integer
          example: 1
        order_number:
          type: string
          example: "ORD-2024-001"
        customer_id:
          type: integer
          example: 1
        billing_address_id:
          type: integer
          example: 1
        shipping_address_id:
          type: integer
          example: 2
        coupon_id:
          type: integer
          nullable: true
          example: 1
        status:
          type: string
          enum: [pending, processing, shipped, delivered, cancelled]
          example: "pending"
        payment_status:
          type: string
          enum: [pending, paid, failed, refunded]
          example: "pending"
        payment_method:
          type: string
          enum: [credit_card, debit_card, boleto, pix, transfer]
          example: "credit_card"
        shipping_method:
          type: string
          example: "standard"
        subtotal:
          type: number
          format: float
          example: 1999.90
        tax_amount:
          type: number
          format: float
          example: 199.99
        shipping_amount:
          type: number
          format: float
          example: 15.00
        discount_amount:
          type: number
          format: float
          example: 199.99
        total_amount:
          type: number
          format: float
          example: 2014.90
        currency:
          type: string
          example: "BRL"
        notes:
          type: string
          nullable: true
          example: "Pedido urgente"
        tracking_code:
          type: string
          nullable: true
          example: "BR123456789"
        tracking_url:
          type: string
          nullable: true
          example: "https://tracking.correios.com.br/BR123456789"
        shipped_at:
          type: string
          format: date-time
          nullable: true
        delivered_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        customer:
          $ref: '#/components/schemas/Customer'
        billing_address:
          $ref: '#/components/schemas/Address'
        shipping_address:
          $ref: '#/components/schemas/Address'
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          example: 1
        order_id:
          type: integer
          example: 1
        product_id:
          type: integer
          example: 1
        product_name:
          type: string
          example: "Smartphone Samsung Galaxy"
        product_sku:
          type: string
          example: "SAMSUNG-001"
        quantity:
          type: integer
          example: 2
        unit_price:
          type: number
          format: float
          example: 1999.90
        total_price:
          type: number
          format: float
          example: 3999.80
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Cart:
      type: object
      properties:
        id:
          type: integer
          example: 1
        session_id:
          type: string
          example: "abc123session"
        customer_id:
          type: integer
          nullable: true
          example: 1
        coupon_id:
          type: integer
          nullable: true
          example: 1
        subtotal:
          type: number
          format: float
          example: 1999.90
        tax_amount:
          type: number
          format: float
          example: 199.99
        shipping_amount:
          type: number
          format: float
          example: 15.00
        discount_amount:
          type: number
          format: float
          example: 199.99
        total_amount:
          type: number
          format: float
          example: 2014.90
        currency:
          type: string
          example: "BRL"
        items_count:
          type: integer
          example: 2
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
    CartItem:
      type: object
      properties:
        id:
          type: integer
          example: 1
        cart_id:
          type: integer
          example: 1
        product_id:
          type: integer
          example: 1
        product_name:
          type: string
          example: "Smartphone Samsung Galaxy"
        product_sku:
          type: string
          example: "SAMSUNG-001"
        quantity:
          type: integer
          example: 2
        unit_price:
          type: number
          format: float
          example: 1999.90
        total_price:
          type: number
          format: float
          example: 3999.80
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Coupon:
      type: object
      properties:
        id:
          type: integer
          example: 1
        code:
          type: string
          example: "DESCONTO10"
        name:
          type: string
          example: "Desconto de 10%"
        description:
          type: string
          example: "Desconto de 10% em produtos selecionados"
        discount_type:
          type: string
          enum: [percentage, fixed]
          example: "percentage"
        discount_value:
          type: number
          format: float
          example: 10.0
        minimum_amount:
          type: number
          format: float
          nullable: true
          example: 100.0
        maximum_amount:
          type: number
          format: float
          nullable: true
          example: 1000.0
        usage_limit:
          type: integer
          nullable: true
          example: 100
        usage_per_customer:
          type: integer
          example: 1
        valid_from:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"
        valid_until:
          type: string
          format: date-time
          example: "2024-12-31T23:59:59Z"
        is_active:
          type: boolean
          example: true
        is_public:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Erro de validação"
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          example:
            name: ["O campo nome é obrigatório"]
            email: ["O campo email deve ser um email válido"]
        code:
          type: integer
          example: 422
        timestamp:
          type: string
          format: date-time
          example: "2024-01-01T12:00:00Z"
    Pagination:
      type: object
      properties:
        current_page:
          type: integer
          example: 1
        per_page:
          type: integer
          example: 15
        total:
          type: integer
          example: 100
        last_page:
          type: integer
          example: 7
        from:
          type: integer
          example: 1
        to:
          type: integer
          example: 15
        has_more_pages:
          type: boolean
          example: true
        next_page_url:
          type: string
          nullable: true
          example: "https://api.loja.com/api/v1/products?page=2"
        prev_page_url:
          type: string
          nullable: true
          example: null
    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
        message:
          type: string
          example: "Operação realizada com sucesso"
        pagination:
          $ref: '#/components/schemas/Pagination'
        timestamp:
          type: string
          format: date-time
          example: "2024-01-01T12:00:00Z"
    Filters:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        brands:
          type: array
          items:
            $ref: '#/components/schemas/Brand'
        price_range:
          type: object
          properties:
            min:
              type: number
              format: float
              example: 10.0
            max:
              type: number
              format: float
              example: 10000.0
        rating_range:
          type: object
          properties:
            min:
              type: number
              format: float
              example: 0.0
            max:
              type: number
              format: float
              example: 5.0
        stock_status:
          type: array
          items:
            type: string
            enum: [in_stock, out_of_stock, low_stock]
          example: ["in_stock", "low_stock"]
        features:
          type: array
          items:
            type: string
            enum: [featured, on_sale, new_arrival]
          example: ["featured", "on_sale"]
paths:
  /api/v1/products:
    get:
      tags:
        - Products
      summary: Listar produtos
      description: |
        Retorna uma lista paginada de produtos com opções de filtro e ordenação.

        ### Filtros Disponíveis:
        - `category_id` - Filtrar por categoria
        - `brand_id` - Filtrar por marca
        - `min_price`, `max_price` - Filtrar por preço
        - `min_rating` - Filtrar por avaliação mínima
        - `in_stock` - Apenas produtos em estoque (1) ou sem estoque (0)
        - `featured` - Apenas produtos em destaque (1)
        - `on_sale` - Apenas produtos em promoção (1)
        - `search` - Buscar por nome, descrição ou SKU

        ### Ordenação:
        - `sort` - Campo para ordenar (name, price, rating, created_at)
        - `order` - Direção (asc, desc)
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Página atual
        - name: per_page
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 15
          description: Itens por página
        - name: category_id
          in: query
          schema:
            type: integer
          description: ID da categoria
        - name: brand_id
          in: query
          schema:
            type: integer
          description: ID da marca
        - name: min_price
          in: query
          schema:
            type: number
            format: float
          description: Preço mínimo
        - name: max_price
          in: query
          schema:
            type: number
            format: float
          description: Preço máximo
        - name: min_rating
          in: query
          schema:
            type: number
            format: float
            minimum: 0
            maximum: 5
          description: Avaliação mínima
        - name: in_stock
          in: query
          schema:
            type: integer
            enum: [0, 1]
          description: Status de estoque
        - name: featured
          in: query
          schema:
            type: integer
            enum: [0, 1]
          description: Produtos em destaque
        - name: on_sale
          in: query
          schema:
            type: integer
            enum: [0, 1]
          description: Produtos em promoção
        - name: search
          in: query
          schema:
            type: string
            minLength: 2
          description: Termo de busca
        - name: sort
          in: query
          schema:
            type: string
            enum: [name, price, rating, created_at]
            default: name
          description: Campo para ordenar
        - name: order
          in: query
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: Direção da ordenação
      responses:
        '200':
          description: Lista de produtos
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Product'
        '400':
          description: Parâmetros inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Muitas requisições
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Products
      summary: Criar produto (Admin)
      description: Cria um novo produto. Requer autenticação de administrador.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - price
                - stock_quantity
                - category_id
                - brand_id
              properties:
                category_id:
                  type: integer
                  example: 1
                brand_id:
                  type: integer
                  example: 1
                name:
                  type: string
                  minLength: 3
                  maxLength: 255
                  example: "Smartphone Samsung Galaxy"
                slug:
                  type: string
                  example: "smartphone-samsung-galaxy"
                sku:
                  type: string
                  example: "SAMSUNG-001"
                description:
                  type: string
                  example: "Smartphone de última geração"
                short_description:
                  type: string
                  example: "128GB de armazenamento"
                price:
                  type: number
                  format: float
                  minimum: 0
                  example: 1999.90
                compare_price:
                  type: number
                  format: float
                  example: 2299.90
                cost:
                  type: number
                  format: float
                  example: 1500.00
                stock_quantity:
                  type: integer
                  minimum: 0
                  example: 50
                min_stock:
                  type: integer
                  example: 10
                max_stock:
                  type: integer
                  example: 1000
                is_active:
                  type: boolean
                  example: true
                is_featured:
                  type: boolean
                  example: false
                is_digital:
                  type: boolean
                  example: false
                weight:
                  type: number
                  format: float
                  example: 0.5
                length:
                  type: number
                  format: float
                  example: 15.0
                width:
                  type: number
                  format: float
                  example: 7.0
                height:
                  type: number
                  format: float
                  example: 1.0
                meta_title:
                  type: string
                  example: "Smartphone Samsung Galaxy - Loja Online"
                meta_description:
                  type: string
                  example: "Compre o melhor smartphone Samsung"
                tags:
                  type: array
                  items:
                    type: string
                  example: ["smartphone", "samsung", "galaxy"]
      responses:
        '201':
          description: Produto criado
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Product'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/products/{id}:
    get:
      tags:
        - Products
      summary: Obter produto específico
      description: Retorna os detalhes completos de um produto, incluindo avaliações e imagens.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do produto
      responses:
        '200':
          description: Produto encontrado
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Product'
        '404':
          description: Produto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Products
      summary: Atualizar produto (Admin)
      description: Atualiza um produto existente. Requer autenticação de administrador.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do produto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Smartphone Samsung Galaxy Atualizado"
                price:
                  type: number
                  format: float
                  example: 2199.90
                stock_quantity:
                  type: integer
                  example: 75
                is_featured:
                  type: boolean
                  example: true
      responses:
        '200':
          description: Produto atualizado
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Product'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Produto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Products
      summary: Excluir produto (Admin)
      description: Remove um produto (soft delete). Requer autenticação de administrador.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do produto
      responses:
        '200':
          description: Produto excluído
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "Produto excluído com sucesso"
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Produto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/products/featured:
    get:
      tags:
        - Products
      summary: Produtos em destaque
      description: Retorna produtos marcados como em destaque.
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
          description: Número máximo de produtos
      responses:
        '200':
          description: Produtos em destaque
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Product'
  /api/v1/products/category/{slug}:
    get:
      tags:
        - Products
      summary: Produtos por categoria
      description: Retorna produtos de uma categoria específica.
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
          description: Slug da categoria
        - name: page
          in: query
          schema:
            type: integer
            default: 1
          description: Página atual
        - name: per_page
          in: query
          schema:
            type: integer
            default: 15
          description: Itens por página
      responses:
        '200':
          description: Produtos da categoria
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Product'
        '404':
          description: Categoria não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/products/brand/{slug}:
    get:
      tags:
        - Products
      summary: Produtos por marca
      description: Retorna produtos de uma marca específica.
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
          description: Slug da marca
        - name: page
          in: query
          schema:
            type: integer
            default: 1
          description: Página atual
        - name: per_page
          in: query
          schema:
            type: integer
            default: 15
          description: Itens por página
      responses:
        '200':
          description: Produtos da marca
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Product'
        '404':
          description: Marca não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/products/{id}/reviews:
    get:
      tags:
        - Products
      summary: Avaliações do produto
      description: Retorna as avaliações de um produto específico.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do produto
        - name: page
          in: query
          schema:
            type: integer
            default: 1
          description: Página atual
        - name: per_page
          in: query
          schema:
            type: integer
            default: 10
          description: Itens por página
        - name: rating
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 5
          description: Filtrar por avaliação específica
        - name: verified
          in: query
          schema:
            type: integer
            enum: [0, 1]
          description: Apenas avaliações verificadas
      responses:
        '200':
          description: Avaliações do produto
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Review'
        '404':
          description: Produto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/products/{id}/related:
    get:
      tags:
        - Products
      summary: Produtos relacionados
      description: Retorna produtos relacionados ao produto especificado.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do produto
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 20
            default: 8
          description: Número máximo de produtos
      responses:
        '200':
          description: Produtos relacionados
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Product'
        '404':
          description: Produto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/products/{id}/similar:
    get:
      tags:
        - Products
      summary: Produtos similares
      description: Retorna produtos similares ao produto especificado.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do produto
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 20
            default: 8
          description: Número máximo de produtos
      responses:
        '200':
          description: Produtos similares
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Product'
        '404':
          description: Produto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/products/search:
    get:
      tags:
        - Products
      summary: Buscar produtos
      description: |
        Busca produtos por termo. Suporta busca avançada com filtros.

        ### Parâmetros de Busca:
        - `q` - Termo de busca (nome, descrição, SKU, tags)
        - `suggestions` - Retornar apenas sugestões (1) ou resultados completos (0)
        - `category_id` - Filtrar por categoria
        - `brand_id` - Filtrar por marca
        - `min_price`, `max_price` - Filtrar por preço
        - `in_stock` - Apenas produtos em estoque
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
            minLength: 2
          description: Termo de busca
        - name: suggestions
          in: query
          schema:
            type: integer
            enum: [0, 1]
            default: 0
          description: Retornar apenas sugestões
        - name: category_id
          in: query
          schema:
            type: integer
          description: Filtrar por categoria
        - name: brand_id
          in: query
          schema:
            type: integer
          description: Filtrar por marca
        - name: min_price
          in: query
          schema:
            type: number
            format: float
          description: Preço mínimo
        - name: max_price
          in: query
          schema:
            type: number
            format: float
          description: Preço máximo
        - name: in_stock
          in: query
          schema:
            type: integer
            enum: [0, 1]
          description: Apenas produtos em estoque
      responses:
        '200':
          description: Resultados da busca
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Product'
        '400':
          description: Parâmetros inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/products/filters:
    get:
      tags:
        - Products
      summary: Filtros disponíveis
      description: Retorna todas as opções de filtro disponíveis (categorias, marcas, faixas de preço).
      responses:
        '200':
          description: Filtros disponíveis
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Filters'
  /api/v1/products/stats:
    get:
      tags:
        - Products
      summary: Estatísticas de produtos
      description: Retorna estatísticas gerais sobre os produtos.
      responses:
        '200':
          description: Estatísticas de produtos
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          total_products:
                            type: integer
                            example: 1000
                          active_products:
                            type: integer
                            example: 950
                          featured_products:
                            type: integer
                            example: 50
                          out_of_stock_products:
                            type: integer
                            example: 25
                          low_stock_products:
                            type: integer
                            example: 75
                          average_price:
                            type: number
                            format: float
                            example: 299.90
                          average_rating:
                            type: number
                            format: float
                            example: 4.2
  /api/v1/categories:
    get:
      tags:
        - Categories
      summary: Listar categorias
      description: Retorna uma lista hierárquica de categorias.
      parameters:
        - name: parent_only
          in: query
          schema:
            type: integer
            enum: [0, 1]
            default: 0
          description: Apenas categorias pai
        - name: active_only
          in: query
          schema:
            type: integer
            enum: [0, 1]
            default: 1
          description: Apenas categorias ativas
      responses:
        '200':
          description: Lista de categorias
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Category'
  /api/v1/categories/{id}:
    get:
      tags:
        - Categories
      summary: Obter categoria específica
      description: Retorna os detalhes de uma categoria.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID da categoria
      responses:
        '200':
          description: Categoria encontrada
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Category'
        '404':
          description: Categoria não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/categories/{id}/tree:
    get:
      tags:
        - Categories
      summary: Árvore de categorias
      description: Retorna a estrutura hierárquica completa da categoria.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID da categoria
      responses:
        '200':
          description: Árvore de categorias
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Category'
        '404':
          description: Categoria não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/brands:
    get:
      tags:
        - Brands
      summary: Listar marcas
      description: Retorna uma lista de marcas.
      parameters:
        - name: active_only
          in: query
          schema:
            type: integer
            enum: [0, 1]
            default: 1
          description: Apenas marcas ativas
      responses:
        '200':
          description: Lista de marcas
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Brand'
  /api/v1/brands/{id}:
    get:
      tags:
        - Brands
      summary: Obter marca específica
      description: Retorna os detalhes de uma marca.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID da marca
      responses:
        '200':
          description: Marca encontrada
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Brand'
        '404':
          description: Marca não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/cart:
    get:
      tags:
        - Cart
      summary: Obter carrinho
      description: |
        Retorna o carrinho atual do usuário (autenticado) ou convidado (via session).

        Para usuários autenticados, o carrinho é associado ao usuário.
        Para convidados, o carrinho é identificado via session ID.
      responses:
        '200':
          description: Carrinho atual
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Cart'
    post:
      tags:
        - Cart
      summary: Adicionar item ao carrinho
      description: Adiciona um produto ao carrinho.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - product_id
                - quantity
              properties:
                product_id:
                  type: integer
                  example: 1
                quantity:
                  type: integer
                  minimum: 1
                  example: 2
      responses:
        '200':
          description: Item adicionado
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Cart'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Produto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/cart/{itemId}:
    put:
      tags:
        - Cart
      summary: Atualizar item do carrinho
      description: Atualiza a quantidade de um item no carrinho.
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: integer
          description: ID do item no carrinho
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - quantity
              properties:
                quantity:
                  type: integer
                  minimum: 1
                  example: 3
      responses:
        '200':
          description: Item atualizado
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Cart'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Item não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Cart
      summary: Remover item do carrinho
      description: Remove um item do carrinho.
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: integer
          description: ID do item no carrinho
      responses:
        '200':
          description: Item removido
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Cart'
        '404':
          description: Item não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/cart/apply-coupon:
    post:
      tags:
        - Cart
      summary: Aplicar cupom
      description: Aplica um cupom de desconto ao carrinho.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - coupon_code
              properties:
                coupon_code:
                  type: string
                  example: "DESCONTO10"
      responses:
        '200':
          description: Cupom aplicado
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Cart'
        '400':
          description: Cupom inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/cart/remove-coupon:
    delete:
      tags:
        - Cart
      summary: Remover cupom
      description: Remove o cupom aplicado ao carrinho.
      responses:
        '200':
          description: Cupom removido
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Cart'
  /api/v1/orders:
    get:
      tags:
        - Orders
      summary: Listar pedidos
      description: Retorna os pedidos do usuário autenticado.
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
          description: Página atual
        - name: per_page
          in: query
          schema:
            type: integer
            default: 15
          description: Itens por página
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, processing, shipped, delivered, cancelled]
          description: Filtrar por status
        - name: start_date
          in: query
          schema:
            type: string
            format: date
          description: Data inicial
        - name: end_date
          in: query
          schema:
            type: string
            format: date
          description: Data final
      responses:
        '200':
          description: Lista de pedidos
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Order'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Orders
      summary: Criar pedido
      description: Cria um novo pedido a partir do carrinho.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - billing_address_id
                - shipping_address_id
                - payment_method
                - shipping_method
              properties:
                billing_address_id:
                  type: integer
                  example: 1
                shipping_address_id:
                  type: integer
                  example: 2
                payment_method:
                  type: string
                  enum: [credit_card, debit_card, boleto, pix, transfer]
                  example: "credit_card"
                shipping_method:
                  type: string
                  example: "standard"
                notes:
                  type: string
                  example: "Pedido urgente"
      responses:
        '201':
          description: Pedido criado
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Order'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/orders/{id}:
    get:
      tags:
        - Orders
      summary: Obter pedido específico
      description: Retorna os detalhes de um pedido específico.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do pedido
      responses:
        '200':
          description: Pedido encontrado
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Order'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Pedido não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/orders/{id}/cancel:
    post:
      tags:
        - Orders
      summary: Cancelar pedido
      description: Cancela um pedido (se permitido pelo status atual).
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do pedido
      responses:
        '200':
          description: Pedido cancelado
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Order'
        '400':
          description: Não é possível cancelar
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Pedido não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/reviews:
    get:
      tags:
        - Reviews
      summary: Listar avaliações
      description: Retorna avaliações com paginação e filtros.
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
          description: Página atual
        - name: per_page
          in: query
          schema:
            type: integer
            default: 15
          description: Itens por página
        - name: product_id
          in: query
          schema:
            type: integer
          description: Filtrar por produto
        - name: rating
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 5
          description: Filtrar por avaliação
        - name: verified
          in: query
          schema:
            type: integer
            enum: [0, 1]
          description: Apenas avaliações verificadas
      responses:
        '200':
          description: Lista de avaliações
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Review'
    post:
      tags:
        - Reviews
      summary: Criar avaliação
      description: |
        Cria uma nova avaliação para um produto.

        **Requisitos:**
        - Usuário deve estar autenticado
        - Usuário deve ter comprado o produto
        - Produto deve existir e estar ativo
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - product_id
                - rating
                - comment
              properties:
                product_id:
                  type: integer
                  example: 1
                rating:
                  type: integer
                  minimum: 1
                  maximum: 5
                  example: 5
                comment:
                  type: string
                  minLength: 10
                  maxLength: 1000
                  example: "Excelente produto! Recomendo muito."
                pros:
                  type: string
                  example: "Câmera excelente, bateria dura o dia todo"
                cons:
                  type: string
                  example: "Preço um pouco elevado"
      responses:
        '201':
          description: Avaliação criada
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Review'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/reviews/{id}:
    get:
      tags:
        - Reviews
      summary: Obter avaliação específica
      description: Retorna os detalhes de uma avaliação.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID da avaliação
      responses:
        '200':
          description: Avaliação encontrada
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Review'
        '404':
          description: Avaliação não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Reviews
      summary: Atualizar avaliação
      description: Atualiza uma avaliação existente.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID da avaliação
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: integer
                  minimum: 1
                  maximum: 5
                  example: 4
                comment:
                  type: string
                  example: "Produto muito bom, mas poderia ser mais barato"
                pros:
                  type: string
                  example: "Qualidade excelente"
                cons:
                  type: string
                  example: "Preço elevado"
      responses:
        '200':
          description: Avaliação atualizada
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Review'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Avaliação não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Reviews
      summary: Excluir avaliação
      description: Remove uma avaliação.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID da avaliação
      responses:
        '200':
          description: Avaliação excluída
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "Avaliação excluída com sucesso"
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Avaliação não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/reviews/{id}/vote:
    post:
      tags:
        - Reviews
      summary: Votar em avaliação
      description: Vota como útil ou não útil em uma avaliação.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID da avaliação
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
              properties:
                type:
                  type: string
                  enum: [helpful, not_helpful]
                  example: "helpful"
      responses:
        '200':
          description: Voto registrado
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Review'
        '400':
          description: Tipo de voto inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/reviews/{id}/report:
    post:
      tags:
        - Reviews
      summary: Denunciar avaliação
      description: Denuncia uma avaliação por violação das regras.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID da avaliação
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - reason
              properties:
                reason:
                  type: string
                  enum: [spam, offensive, inappropriate, fake, other]
                  example: "offensive"
                description:
                  type: string
                  example: "A avaliação contém linguagem ofensiva"
      responses:
        '200':
          description: Denúncia registrada
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "Denúncia registrada com sucesso"
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/auth/login:
    post:
      tags:
        - Authentication
      summary: Fazer login
      description: |
        Autentica um usuário e retorna um token de acesso.

        O token deve ser incluído no header `Authorization: Bearer {token}`
        para acessar endpoints protegidos.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: "cliente@email.com"
                password:
                  type: string
                  format: password
                  example: "senha123"
                remember_me:
                  type: boolean
                  example: false
      responses:
        '200':
          description: Login realizado com sucesso
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          user:
                            $ref: '#/components/schemas/Customer'
                          token:
                            type: string
                            example: "1|abc123def456"
                          token_type:
                            type: string
                            example: "Bearer"
                          expires_in:
                            type: integer
                            example: 3600
        '401':
          description: Credenciais inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/auth/logout:
    post:
      tags:
        - Authentication
      summary: Fazer logout
      description: Invalida o token de acesso atual.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout realizado com sucesso
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "Logout realizado com sucesso"
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/auth/me:
    get:
      tags:
        - Authentication
      summary: Obter dados do usuário
      description: Retorna os dados do usuário autenticado.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Dados do usuário
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Customer'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/auth/refresh:
    post:
      tags:
        - Authentication
      summary: Renovar token
      description: Renova o token de acesso usando o refresh token.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Token renovado
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          token:
                            type: string
                            example: "1|newtoken123"
                          token_type:
                            type: string
                            example: "Bearer"
                          expires_in:
                            type: integer
                            example: 3600
        '401':
          description: Token inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/health:
    get:
      tags:
        - System
      summary: Verificar saúde do sistema
      description: |
        Verifica se a API está funcionando corretamente.

        Retorna informações sobre:
        - Status da aplicação
        - Status do banco de dados
        - Status do cache
        - Versão da API
        - Tempo de resposta
      responses:
        '200':
          description: Sistema saudável
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          status:
                            type: string
                            example: "healthy"
                          database:
                            type: string
                            example: "connected"
                          cache:
                            type: string
                            example: "connected"
                          version:
                            type: string
                            example: "1.0.0"
                          response_time:
                            type: number
                            format: float
                            example: 0.125
  /api/v1/admin/products:
    post:
      tags:
        - Admin
      summary: Criar produto (Admin)
      description: Cria um novo produto. Requer privilégios de administrador.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - price
                - stock_quantity
                - category_id
                - brand_id
              properties:
                category_id:
                  type: integer
                  example: 1
                brand_id:
                  type: integer
                  example: 1
                name:
                  type: string
                  minLength: 3
                  maxLength: 255
                  example: "Smartphone Samsung Galaxy"
                slug:
                  type: string
                  example: "smartphone-samsung-galaxy"
                sku:
                  type: string
                  example: "SAMSUNG-001"
                description:
                  type: string
                  example: "Smartphone de última geração"
                short_description:
                  type: string
                  example: "128GB de armazenamento"
                price:
                  type: number
                  format: float
                  minimum: 0
                  example: 1999.90
                compare_price:
                  type: number
                  format: float
                  example: 2299.90
                cost:
                  type: number
                  format: float
                  example: 1500.00
                stock_quantity:
                  type: integer
                  minimum: 0
                  example: 50
                min_stock:
                  type: integer
                  example: 10
                max_stock:
                  type: integer
                  example: 1000
                is_active:
                  type: boolean
                  example: true
                is_featured:
                  type: boolean
                  example: false
                is_digital:
                  type: boolean
                  example: false
                weight:
                  type: number
                  format: float
                  example: 0.5
                length:
                  type: number
                  format: float
                  example: 15.0
                width:
                  type: number
                  format: float
                  example: 7.0
                height:
                  type: number
                  format: float
                  example: 1.0
                meta_title:
                  type: string
                  example: "Smartphone Samsung Galaxy - Loja Online"
                meta_description:
                  type: string
                  example: "Compre o melhor smartphone Samsung"
                tags:
                  type: array
                  items:
                    type: string
                  example: ["smartphone", "samsung", "galaxy"]
      responses:
        '201':
          description: Produto criado
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Product'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/admin/products/{id}:
    put:
      tags:
        - Admin
      summary: Atualizar produto (Admin)
      description: Atualiza um produto existente. Requer privilégios de administrador.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do produto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Smartphone Samsung Galaxy Atualizado"
                price:
                  type: number
                  format: float
                  example: 2199.90
                stock_quantity:
                  type: integer
                  example: 75
                is_featured:
                  type: boolean
                  example: true
      responses:
        '200':
          description: Produto atualizado
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Product'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Produto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Admin
      summary: Excluir produto (Admin)
      description: Remove um produto (soft delete). Requer privilégios de administrador.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do produto
      responses:
        '200':
          description: Produto excluído
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "Produto excluído com sucesso"
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Produto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'